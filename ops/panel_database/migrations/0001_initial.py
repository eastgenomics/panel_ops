# Generated by Django 3.1.4 on 2021-03-23 14:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClinicalIndication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinical_indication_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('version', models.CharField(max_length=100)),
                ('gemini_name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'clinical_indication',
            },
        ),
        migrations.CreateModel(
            name='ClinicalIndicationPanels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'clinical_indication_panels',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'feature',
            },
        ),
        migrations.CreateModel(
            name='FeatureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('gene', 'gene')], max_length=50)),
            ],
            options={
                'db_table': 'feature_type',
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'gene',
            },
        ),
        migrations.CreateModel(
            name='Genes2transcripts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinical_transcript', models.BooleanField()),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'genes2transcripts',
            },
        ),
        migrations.CreateModel(
            name='hgnc_210129',
            fields=[
                ('hgnc_id', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('approved_symbol', models.CharField(max_length=100)),
                ('approved_name', models.TextField()),
                ('status', models.TextField()),
                ('previous_symbols', models.TextField()),
                ('alias_symbols', models.TextField()),
                ('chromosome', models.TextField()),
                ('accession_numbers', models.TextField()),
                ('locus_type', models.TextField()),
                ('locus_group', models.TextField()),
                ('previous_name', models.TextField()),
                ('alias_names', models.TextField()),
                ('date_approved', models.TextField()),
                ('date_modified', models.TextField()),
                ('date_symbol_changed', models.TextField()),
                ('date_name_changed', models.TextField()),
                ('enzyme_ids', models.TextField()),
                ('specialist_database_links', models.TextField()),
                ('specialist_database_ids', models.TextField()),
                ('pubmed_ids', models.TextField()),
                ('gene_group_id', models.TextField()),
                ('gene_group_name', models.TextField()),
                ('ccds_ids', models.TextField()),
                ('locus_specific_databases', models.TextField()),
                ('ext_ncbi_gene_id', models.TextField()),
                ('ext_omim_id', models.TextField()),
                ('ext_refseq', models.TextField()),
                ('ext_uniprot_id', models.TextField()),
                ('ext_ensembl_id', models.TextField()),
                ('ext_vega_id', models.TextField()),
                ('ext_ucsc_id', models.TextField()),
                ('ext_mouse_genome_database_id', models.TextField()),
                ('ext_rat_genome_database_id', models.TextField()),
                ('ext_lncipedia_id', models.TextField()),
                ('ext_gtrnadb_id', models.TextField()),
                ('ext_agr_hgnc_id', models.TextField()),
            ],
            options={
                'db_table': 'hgnc_210129',
            },
        ),
        migrations.CreateModel(
            name='hgnc_current',
            fields=[
                ('hgnc_id', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('approved_symbol', models.CharField(max_length=100)),
                ('approved_name', models.TextField()),
                ('status', models.TextField()),
                ('previous_symbols', models.TextField()),
                ('alias_symbols', models.TextField()),
                ('chromosome', models.TextField()),
                ('accession_numbers', models.TextField()),
                ('locus_type', models.TextField()),
                ('locus_group', models.TextField()),
                ('previous_name', models.TextField()),
                ('alias_names', models.TextField()),
                ('date_approved', models.TextField()),
                ('date_modified', models.TextField()),
                ('date_symbol_changed', models.TextField()),
                ('date_name_changed', models.TextField()),
                ('enzyme_ids', models.TextField()),
                ('specialist_database_links', models.TextField()),
                ('specialist_database_ids', models.TextField()),
                ('pubmed_ids', models.TextField()),
                ('gene_group_id', models.TextField()),
                ('gene_group_name', models.TextField()),
                ('ccds_ids', models.TextField()),
                ('locus_specific_databases', models.TextField()),
                ('ext_ncbi_gene_id', models.TextField()),
                ('ext_omim_id', models.TextField()),
                ('ext_refseq', models.TextField()),
                ('ext_uniprot_id', models.TextField()),
                ('ext_ensembl_id', models.TextField()),
                ('ext_vega_id', models.TextField()),
                ('ext_ucsc_id', models.TextField()),
                ('ext_mouse_genome_database_id', models.TextField()),
                ('ext_rat_genome_database_id', models.TextField()),
                ('ext_lncipedia_id', models.TextField()),
                ('ext_gtrnadb_id', models.TextField()),
                ('ext_agr_hgnc_id', models.TextField()),
            ],
            options={
                'db_table': 'hgnc_current',
            },
        ),
        migrations.CreateModel(
            name='Panel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panelapp_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'panel',
            },
        ),
        migrations.CreateModel(
            name='PanelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('gms', 'gms'), ('non-gms', 'non-gms'), ('in-house', 'in-house'), ('single_gene', 'single_gene')], max_length=50)),
            ],
            options={
                'db_table': 'panel_type',
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'reference',
            },
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refseq_base', models.CharField(max_length=50)),
                ('version', models.IntegerField()),
                ('canonical', models.BooleanField()),
            ],
            options={
                'db_table': 'transcript',
            },
        ),
        migrations.CreateModel(
            name='PanelFeatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('panel_version', models.FloatField()),
                ('description', models.TextField(null=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.feature')),
                ('panel', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.panel')),
            ],
            options={
                'db_table': 'panel_features',
            },
        ),
        migrations.AddField(
            model_name='panel',
            name='panel_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.paneltype'),
        ),
        migrations.AddIndex(
            model_name='hgnc_current',
            index=models.Index(fields=['hgnc_id'], name='hgnc_curren_hgnc_id_0da984_idx'),
        ),
        migrations.AddIndex(
            model_name='hgnc_210129',
            index=models.Index(fields=['hgnc_id'], name='hgnc_210129_hgnc_id_2233d2_idx'),
        ),
        migrations.AddField(
            model_name='genes2transcripts',
            name='gene',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.gene'),
        ),
        migrations.AddField(
            model_name='genes2transcripts',
            name='reference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.reference'),
        ),
        migrations.AddField(
            model_name='genes2transcripts',
            name='transcript',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.transcript'),
        ),
        migrations.AddField(
            model_name='feature',
            name='feature_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.featuretype'),
        ),
        migrations.AddField(
            model_name='feature',
            name='gene',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.gene'),
        ),
        migrations.AddField(
            model_name='clinicalindicationpanels',
            name='clinical_indication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.clinicalindication'),
        ),
        migrations.AddField(
            model_name='clinicalindicationpanels',
            name='panel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='panel_database.panel'),
        ),
        migrations.AddIndex(
            model_name='clinicalindication',
            index=models.Index(fields=['name'], name='clinical_in_name_d871dc_idx'),
        ),
        migrations.AddIndex(
            model_name='clinicalindication',
            index=models.Index(fields=['gemini_name'], name='clinical_in_gemini__a1b42a_idx'),
        ),
        migrations.AddIndex(
            model_name='clinicalindication',
            index=models.Index(fields=['version'], name='clinical_in_version_6ddffd_idx'),
        ),
        migrations.AddIndex(
            model_name='panelfeatures',
            index=models.Index(fields=['panel_version', 'feature', 'panel'], name='panel_featu_panel_v_e05138_idx'),
        ),
        migrations.AddIndex(
            model_name='panel',
            index=models.Index(fields=['name'], name='panel_name_ca1178_idx'),
        ),
        migrations.AddIndex(
            model_name='panel',
            index=models.Index(fields=['panelapp_id'], name='panel_panelap_08d94d_idx'),
        ),
        migrations.AddIndex(
            model_name='genes2transcripts',
            index=models.Index(fields=['transcript', 'gene', 'reference'], name='genes2trans_transcr_f63b1d_idx'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['gene'], name='feature_gene_id_b49dfb_idx'),
        ),
        migrations.AddIndex(
            model_name='clinicalindicationpanels',
            index=models.Index(fields=['clinical_indication', 'panel'], name='clinical_in_clinica_9b5ae9_idx'),
        ),
    ]
